{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\src\\\\components\\\\Locations\\\\Locations.js\";\nimport React from 'react';\nimport Edit from '../EditUsers/Edit.js';\n\nvar Locations =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Locations, _React$Component);\n\n  function Locations() {\n    var _this;\n\n    _classCallCheck(this, Locations);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Locations).call(this));\n\n    _this.onRouteChange = function (route, database, user) {\n      _this.setState({\n        route: route,\n        singleloc: user,\n        db: database\n      });\n    };\n\n    _this.onReload = function (route) {\n      _this.setState({\n        route: 'main',\n        singleuser: {},\n        userarr: []\n      });\n\n      _this.loadlocarr();\n\n      _this.props.onRouteChange(route);\n    };\n\n    _this.loadlocarr = function () {\n      fetch(\"http://localhost:3000/locationsload\", {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (locarr) {\n        if (locarr[0].id) {\n          _this.setState({\n            locationarr: locarr\n          });\n        } else {\n          console.log(locarr);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      route: 'main',\n      locationarr: [],\n      singleloc: {},\n      db: ''\n    };\n    return _this;\n  }\n\n  _createClass(Locations, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadlocarr();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var onRouteChange = this.onRouteChange;\n      var _this$state = this.state,\n          route = _this$state.route,\n          singleloc = _this$state.singleloc,\n          locationarr = _this$state.locationarr,\n          db = _this$state.db;\n\n      if (route === 'main') {\n        return React.createElement(\"div\", {\n          className: \"table-cont\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"\",\n          cellSpacing: \"0\",\n          id: \"historyTable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          align: \"\",\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          className: \" \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"ID\"), React.createElement(\"th\", {\n          className: \" \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Location Name\"), React.createElement(\"th\", {\n          className: \" \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Location Code\"), React.createElement(\"th\", {\n          className: \" \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"In Use?\"), React.createElement(\"th\", {\n          colSpan: \"2\",\n          className: \" \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Edit Locations\"))), React.createElement(\"tbody\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, locationarr.map(function (data, i) {\n          return React.createElement(\"tr\", {\n            className: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            key: 'id',\n            className: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, data.id), React.createElement(\"td\", {\n            key: 'name',\n            className: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, data.name), React.createElement(\"td\", {\n            key: 'code',\n            className: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, data.code), React.createElement(\"td\", {\n            key: 'active',\n            className: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \"\".concat(data.active)), React.createElement(\"td\", {\n            key: 'editlocation',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\",\n            type: \"button\",\n            value: \"Edit Location\",\n            onClick: function onClick() {\n              return onRouteChange(\"edit\", 'locations', data);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          })), React.createElement(\"td\", {\n            key: 'deletelocation',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\",\n            type: \"button\",\n            value: \"Delete Location\",\n            onClick: function onClick() {\n              return onRouteChange(\"delete\", 'locations', data);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          })));\n        }))));\n      } else {\n        return React.createElement(Edit, {\n          target: singleloc,\n          route: route,\n          database: db,\n          onReload: this.onReload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return Locations;\n}(React.Component);\n\nexport default Locations;","map":{"version":3,"sources":["C:\\Users\\Nicholas Krsikapa\\Desktop\\mikan_app\\src\\components\\Locations\\Locations.js"],"names":["React","Edit","Locations","onRouteChange","route","database","user","setState","singleloc","db","onReload","singleuser","userarr","loadlocarr","props","fetch","method","headers","then","response","json","locarr","id","locationarr","console","log","catch","err","state","map","data","i","name","code","active","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Edit from '../EditUsers/Edit.js';\r\n\r\nclass Locations extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            route: 'main',\r\n            locationarr: [],\r\n            singleloc: {},\r\n            db: ''\r\n        }\r\n    }\r\n    onRouteChange = (route, database, user) =>{\r\n        this.setState({route: route, singleloc:user, db:database})\r\n    }\r\n    \r\n    onReload = (route) => {\r\n        this.setState({route: 'main', singleuser:{}, userarr: []})\r\n        this.loadlocarr();\r\n        this.props.onRouteChange(route);\r\n    }\r\n\r\n    loadlocarr = () =>{\r\n\r\n        fetch(`http://localhost:3000/locationsload`, {\r\n            method: 'GET',\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then(response => response.json())\r\n        .then(locarr =>{\r\n            if (locarr[0].id){\r\n            this.setState({locationarr: locarr})\r\n            } else {\r\n                console.log(locarr)\r\n            }\r\n            \r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    \r\n\r\n\r\n    componentDidMount() {\r\n        this.loadlocarr();\r\n        \r\n    }\r\n\r\n    \r\n    render(){\r\n        const { onRouteChange } = this;\r\n        const { route, singleloc, locationarr, db } = this.state;\r\n\r\n        if (route === 'main'){\r\n            return(\r\n                \r\n                <div className='table-cont' > \r\n                    \r\n                    <table className=\"\" cellSpacing=\"0\" id='historyTable'>\r\n                            <thead align='' className='' >\r\n                                <tr className=''>\r\n                                    <th className=\" \">ID</th>\r\n                                    <th className=\" \">Location Name</th>\r\n                                    <th className=\" \">Location Code</th>\r\n                                    <th className=\" \">In Use?</th>\r\n                                    <th colSpan='2' className=\" \">Edit Locations</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"\">\r\n                                {locationarr.map(function(data, i){\r\n                                    return(\r\n                                        <tr className='' >\r\n                                            <td key={'id'} className=\"\">{data.id}</td>\r\n                                            <td key={'name'} className=\"\">{data.name}</td>\r\n                                            <td key={'code'} className=\"\">{data.code}</td>\r\n                                            <td key={'active'} className=\"\">{`${data.active}`}</td>\r\n                                            <td key={'editlocation'}>\r\n                                                <input \r\n                                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\" \r\n                                                    type=\"button\" \r\n                                                    value=\"Edit Location\" \r\n                                                    onClick={() =>\r\n                                                        onRouteChange(\"edit\", 'locations', data)} />\r\n                                            </td>\r\n                                           \r\n                                            <td key={'deletelocation'}>\r\n                                                <input \r\n                                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\" \r\n                                                    type=\"button\" \r\n                                                    value=\"Delete Location\" \r\n                                                    onClick={() =>\r\n                                                        onRouteChange(\"delete\",'locations', data)} /> \r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    \r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n            <Edit target={singleloc} route={route} database={db}  onReload={this.onReload}/>\r\n            )\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default Locations;"]},"metadata":{},"sourceType":"module"}