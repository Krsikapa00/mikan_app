{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\src\\\\components\\\\Menu\\\\Menu.js\";\nimport React from 'react';\nimport Submitbtn from '../Submitbtn';\nimport Lastpunch from './Lastpunch';\nimport AdminLastpunch from './Adminlastpunch';\n\nvar Menu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  function Menu() {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Menu).call(this));\n\n    _this.getLastPunch = function (user) {\n      fetch(\"http://localhost:3000/latestpunch\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: user.id\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (resp) {\n        if (resp.id) {\n          _this.setState({\n            latestpunch: resp\n          }); // console.log(resp);\n\n        } else {\n          console.log(resp);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      latestpunch: {},\n      adminlist: []\n    };\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"getUserList\",\n    value: function getUserList(adminuser) {\n      var _this2 = this;\n\n      return fetch(\"http://localhost:3000/loadusers\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: adminuser.id,\n          admin: adminuser.admin\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (usersarray) {\n        // console.log(usersarray);\n        _this2.setState({\n          adminlist: usersarray\n        });\n\n        return usersarray;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (this.props.user.admin) {\n        this.getUserList(this.props.user).then(function (resp) {\n          _this3.setState({\n            adminlist: resp\n          });\n        });\n      } else {\n        this.getLastPunch(this.props.user);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var admin, adminready;\n      var _this$props = this.props,\n          onRouteChange = _this$props.onRouteChange,\n          user = _this$props.user,\n          punchIn_Out = _this$props.punchIn_Out;\n      var _this$state = this.state,\n          latestpunch = _this$state.latestpunch,\n          adminlist = _this$state.adminlist;\n\n      if (user.admin) {\n        admin = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Submitbtn, {\n          className: \"w\",\n          value: \"Edit Users\",\n          onClick: function onClick() {\n            return onRouteChange('editusers');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), React.createElement(Submitbtn, {\n          className: \"w\",\n          value: \"Locations\",\n          onClick: function onClick() {\n            return onRouteChange('editlocations');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }));\n\n        if (adminlist[0]) {\n          adminready = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, React.createElement(AdminLastpunch, {\n            adminlist: this.state.adminlist,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"br3 pa2 ba  mv4 w-100 w-50-m w-25-1 mw6 shadow-5 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"br3 w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"w-100 black-80 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Submitbtn, {\n        className: \"w\",\n        value: \"Punch Out\",\n        onClick: function onClick() {\n          onRouteChange('punchform');\n          punchIn_Out('Out');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Submitbtn, {\n        className: \"w\",\n        value: \"Punch In\",\n        onClick: function onClick() {\n          onRouteChange('punchform');\n          punchIn_Out('In');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Submitbtn, {\n        className: \"w\",\n        value: \"History\",\n        onClick: function onClick() {\n          return onRouteChange('history');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), admin))), user.admin == true ? adminready : React.createElement(Lastpunch, {\n        punch: latestpunch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nexport default Menu;","map":{"version":3,"sources":["C:\\Users\\Nicholas Krsikapa\\Desktop\\mikan_app\\src\\components\\Menu\\Menu.js"],"names":["React","Submitbtn","Lastpunch","AdminLastpunch","Menu","getLastPunch","user","fetch","method","headers","body","JSON","stringify","id","then","response","json","resp","setState","latestpunch","console","log","catch","err","state","adminlist","adminuser","admin","usersarray","props","getUserList","adminready","onRouteChange","punchIn_Out","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Submitbtn from '../Submitbtn';\r\nimport Lastpunch from './Lastpunch';\r\nimport AdminLastpunch from './Adminlastpunch';\r\n\r\n\r\nclass Menu extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            latestpunch: {},\r\n            adminlist: [],\r\n        }\r\n    }\r\n\r\n    getUserList(adminuser){\r\n        return fetch(`http://localhost:3000/loadusers`, {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                id: adminuser.id,\r\n                admin: adminuser.admin\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(usersarray =>{\r\n            // console.log(usersarray);\r\n            this.setState({adminlist: usersarray}) \r\n            return usersarray;\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    getLastPunch = (user) => {\r\n        fetch(`http://localhost:3000/latestpunch`, {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                id: user.id,\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(resp =>{\r\n            if (resp.id) {\r\n                this.setState({latestpunch:resp})\r\n                // console.log(resp);\r\n            } else {\r\n                console.log(resp);\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        if (this.props.user.admin) {\r\n            this.getUserList(this.props.user)\r\n            .then(resp => {\r\n                this.setState({adminlist:resp})\r\n            })\r\n        } else {\r\n            this.getLastPunch(this.props.user)\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        let admin, adminready;\r\n        const { onRouteChange, user, punchIn_Out } = this.props;\r\n        const { latestpunch, adminlist } = this.state;\r\n\r\n        if (user.admin){\r\n            admin = (\r\n                <div>                \r\n                    <Submitbtn className='w' value=\"Edit Users\" onClick={() => onRouteChange('editusers')} />\r\n              \r\n                    <Submitbtn className='w' value=\"Locations\" onClick={() => onRouteChange('editlocations')} />\r\n                </div>\r\n            )\r\n            if (adminlist[0]) {\r\n                adminready = (\r\n                    <div>\r\n                        <AdminLastpunch adminlist={this.state.adminlist} />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        return(\r\n            <div>\r\n            <div className='br3 pa2 ba  mv4 w-100 w-50-m w-25-1 mw6 shadow-5 center' >\r\n            \r\n                <div className='br3 w-100'>\r\n                    <div className='w-100 black-80 '>\r\n                        <Submitbtn className='w' value=\"Punch Out\"\r\n                            onClick={() => {\r\n                                onRouteChange('punchform');\r\n                                punchIn_Out('Out');\r\n                            }} \r\n                        />\r\n                        <Submitbtn className='w' value=\"Punch In\"\r\n                            onClick={() => {\r\n                                onRouteChange('punchform');\r\n                                punchIn_Out('In');\r\n                            }}\r\n                        />\r\n                        <Submitbtn className='w' value=\"History\" onClick={() => onRouteChange('history')} />\r\n                \r\n                        {admin}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            { user.admin == true\r\n            ? adminready\r\n            :   <Lastpunch punch={latestpunch} />\r\n            }\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;"]},"metadata":{},"sourceType":"module"}