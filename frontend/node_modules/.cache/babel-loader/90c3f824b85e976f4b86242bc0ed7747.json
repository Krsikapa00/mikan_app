{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\src\\\\components\\\\EditUsers\\\\EditUsers.js\";\nimport React from 'react';\nimport Edit from './Edit';\n\nvar EditUsers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditUsers, _React$Component);\n\n  function EditUsers() {\n    var _this;\n\n    _classCallCheck(this, EditUsers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditUsers).call(this));\n\n    _this.onRouteChange = function (route, user) {\n      _this.setState({\n        route: route,\n        singleuser: user\n      });\n    };\n\n    _this.onReload = function (route) {\n      _this.setState({\n        route: 'main',\n        singleuser: {},\n        userarr: []\n      });\n\n      _this.editUsersArr();\n\n      _this.props.onRouteChange(route);\n    };\n\n    _this.editUsersArr = function () {\n      fetch(\"http://localhost:3000/edituserslist\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: _this.props.user.id,\n          admin: _this.props.user.admin\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (usersArray) {\n        _this.setState({\n          userarr: usersArray\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      route: 'main',\n      singleuser: {},\n      typeofChange: '',\n      userarr: []\n    };\n    return _this;\n  }\n\n  _createClass(EditUsers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.editUsersArr();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      ;\n      var onRouteChange = this.onRouteChange;\n      var _this$state = this.state,\n          route = _this$state.route,\n          singleuser = _this$state.singleuser,\n          userarr = _this$state.userarr;\n\n      if (route === 'main') {\n        return React.createElement(\"div\", {\n          className: \"table-cont\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"\",\n          cellSpacing: \"0\",\n          id: \"historyTable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          align: \"\",\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          className: \" \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"ID\"), React.createElement(\"th\", {\n          className: \" \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Name\"), React.createElement(\"th\", {\n          className: \" \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Admin?\"), React.createElement(\"th\", {\n          colSpan: \"1\",\n          className: \" \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Edit User\"))), React.createElement(\"tbody\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, userarr.map(function (data, i) {\n          return React.createElement(\"tr\", {\n            className: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            key: 'id',\n            className: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, data.id), React.createElement(\"td\", {\n            key: 'name',\n            className: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, data.name), React.createElement(\"td\", {\n            key: 'adminuser',\n            className: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, \"\".concat(data.admin)), React.createElement(\"td\", {\n            key: 'editname',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\",\n            type: \"button\",\n            value: \"Edit\",\n            onClick: function onClick() {\n              return onRouteChange(\"user\", data);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          })), React.createElement(\"td\", {\n            key: 'deleteuser',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\",\n            type: \"button\",\n            value: \"Delete user\",\n            onClick: function onClick() {\n              return onRouteChange(\"delete\", data);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          })));\n        }))));\n      } else {\n        return React.createElement(Edit, {\n          singleuser: singleuser,\n          route: route,\n          onReload: this.onReload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return EditUsers;\n}(React.Component);\n\nexport default EditUsers;","map":{"version":3,"sources":["C:\\Users\\Nicholas Krsikapa\\Desktop\\mikan_app\\src\\components\\EditUsers\\EditUsers.js"],"names":["React","Edit","EditUsers","onRouteChange","route","user","setState","singleuser","onReload","userarr","editUsersArr","props","fetch","method","headers","body","JSON","stringify","id","admin","then","response","json","usersArray","catch","err","console","log","state","typeofChange","map","data","i","name","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Edit from './Edit';\r\n\r\n\r\nclass EditUsers extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            route: 'main',\r\n            singleuser: {},\r\n            typeofChange: '',\r\n            userarr: []\r\n        }\r\n      }\r\n    \r\n\r\n    \r\n    onRouteChange = (route, user) =>{\r\n        this.setState({route: route, singleuser:user})\r\n    }\r\n    \r\n    onReload = (route) => {\r\n        this.setState({route: 'main', singleuser:{}, userarr: []})\r\n        this.editUsersArr();\r\n        this.props.onRouteChange(route);\r\n    }\r\n\r\n    editUsersArr = () =>{\r\n        fetch(`http://localhost:3000/edituserslist`, {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                id: this.props.user.id,\r\n                admin: this.props.user.admin,\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(usersArray =>{\r\n            this.setState({userarr: usersArray})\r\n            \r\n        })\r\n        .catch(err => console.log(err));\r\n      }\r\n\r\n    componentDidMount() {\r\n        this.editUsersArr();\r\n        \r\n    }\r\n\r\n    \r\n    render(){\r\n        ;\r\n        const { onRouteChange } = this;\r\n        const { route, singleuser, userarr } = this.state;\r\n        if (route === 'main'){\r\n            return(\r\n                \r\n                <div className='table-cont' > \r\n                    \r\n                    <table className=\"\" cellSpacing=\"0\" id='historyTable'>\r\n                            <thead align='' className='' >\r\n                                <tr className=''>\r\n                                    <th className=\" \">ID</th>\r\n                                    <th className=\" \">Name</th>\r\n                                    <th className=\" \">Admin?</th>\r\n                                    <th colSpan='1' className=\" \">Edit User</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"\">\r\n                                {userarr.map(function(data, i){\r\n                                    return(\r\n                                        <tr className='' >\r\n                                            <td key={'id'} className=\"\">{data.id}</td>\r\n                                            <td key={'name'} className=\"\">{data.name}</td>\r\n                                            <td key={'adminuser'} className=\"\">{`${data.admin}`}</td>\r\n                                            <td key={'editname'}>\r\n                                                <input \r\n                                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\" \r\n                                                    type=\"button\" \r\n                                                    value=\"Edit\" \r\n                                                    onClick={() =>\r\n                                                        onRouteChange(\"user\", data)} />\r\n                                            </td>\r\n                                            <td key={'deleteuser'}>\r\n                                                <input \r\n                                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\" \r\n                                                    type=\"button\" \r\n                                                    value=\"Delete user\" \r\n                                                    onClick={() =>\r\n                                                        onRouteChange(\"delete\", data)} />\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                <Edit singleuser={singleuser} route={route}  onReload={this.onReload}/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EditUsers;"]},"metadata":{},"sourceType":"module"}