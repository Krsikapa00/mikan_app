{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\src\\\\components\\\\PunchForm\\\\PunchForm.js\";\nimport React from 'react';\nimport QrReader from 'react-qr-reader';\nimport Submitbtn from '../Submitbtn';\n\nvar PunchForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PunchForm, _React$Component);\n\n  function PunchForm() {\n    var _this;\n\n    _classCallCheck(this, PunchForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PunchForm).call(this));\n\n    _this.handleScan = function (data) {\n      // if (data) {\n      //     this.setState({location: data});\n      // } else {\n      //     this.setState({location: ''});\n      // }\n      if (data) {\n        fetch('http://localhost:3000/locationscheck', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            location: data\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (resp) {\n          if (!resp.id) {\n            _this.setState({\n              location: ''\n            });\n          } else {\n            _this.setState({\n              location: resp.name,\n              locationcode: resp.code\n            });\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      } else {\n        _this.setState({\n          location: ''\n        });\n      }\n    };\n\n    _this.handleError = function (err) {\n      console.error(err);\n    };\n\n    _this.getDate = function () {\n      var today = new Date();\n      var date = \"\".concat(today.getFullYear(), \"/\").concat(today.getMonth() + 1, \"/\").concat(today.getDate());\n      return date;\n    };\n\n    _this.onRouteChange = function () {\n      if (_this.state.location !== '') {\n        fetch('http://localhost:3000/recordpunch', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: _this.props.user.id,\n            location: _this.state.locationcode,\n            in_out: _this.props.punch.in_out\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (punch) {\n          // eslint-disable-next-line\n          if (punch.id == _this.props.user.id) {\n            _this.props.punchSubmit(punch);\n\n            var button = document.getElementById('submit');\n            button.disabled = true;\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.state = {\n      location: '',\n      locationcode: ''\n    };\n    return _this;\n  }\n\n  _createClass(PunchForm, [{\n    key: \"render\",\n    value: function render() {\n      var in_out = this.props.punch.in_out;\n      var curDate = this.getDate();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(QrReader, {\n        className: \"center\",\n        delay: 200,\n        onError: this.handleError,\n        onScan: this.handleScan,\n        style: {\n          width: '500px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"fw6 lh-copy f3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Place: \".concat(this.state.location)), React.createElement(\"label\", {\n        className: \"db\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"User: \".concat(this.props.user.name), \" \"), React.createElement(\"label\", {\n        className: \"db\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Date: \".concat(curDate)), React.createElement(\"label\", {\n        className: \"db\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"In/Out: \".concat(in_out))), React.createElement(\"div\", {\n        className: \"lh-copy w-20 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Submitbtn, {\n        id: \"submit\",\n        value: \"Punch\",\n        onClick: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PunchForm;\n}(React.Component);\n\nexport default PunchForm;","map":{"version":3,"sources":["C:\\Users\\Nicholas Krsikapa\\Desktop\\mikan_app\\src\\components\\PunchForm\\PunchForm.js"],"names":["React","QrReader","Submitbtn","PunchForm","handleScan","data","fetch","method","headers","body","JSON","stringify","location","then","response","json","resp","id","setState","name","locationcode","code","catch","err","console","log","handleError","error","getDate","today","Date","date","getFullYear","getMonth","onRouteChange","state","props","user","in_out","punch","punchSubmit","button","document","getElementById","disabled","curDate","width","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport QrReader from 'react-qr-reader';\r\nimport Submitbtn from '../Submitbtn';\r\n\r\n\r\nclass PunchForm extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n          location: '',\r\n          locationcode: ''\r\n        }\r\n      }\r\n    \r\n    \r\n    handleScan = (data) => {\r\n        // if (data) {\r\n        //     this.setState({location: data});\r\n        // } else {\r\n        //     this.setState({location: ''});\r\n        // }\r\n        if (data) {\r\n            fetch('http://localhost:3000/locationscheck', {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        location: data\r\n                    })\r\n            })\r\n            .then(response => response.json())\r\n            .then(resp => {\r\n                if (!resp.id) {\r\n                    this.setState({location: ''});\r\n                } else {\r\n                    this.setState({location: resp.name, locationcode: resp.code});\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n        } else {\r\n            this.setState({location: ''});\r\n        }\r\n    }\r\n\r\n    handleError = (err) => {\r\n        console.error(err)\r\n    }\r\n\r\n    getDate = () => {\r\n        const today = new Date();\r\n        const date = (`${today.getFullYear()}/${(today.getMonth()+1)}/${today.getDate()}`);\r\n        return date;\r\n    }\r\n\r\n    onRouteChange = () => {\r\n        if (this.state.location !== ''){\r\n            \r\n            fetch('http://localhost:3000/recordpunch', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    id: this.props.user.id,\r\n                    location: this.state.locationcode,\r\n                    in_out: this.props.punch.in_out\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(punch => {\r\n                // eslint-disable-next-line\r\n                if (punch.id == this.props.user.id) {\r\n                    this.props.punchSubmit(punch);\r\n                    const button = document.getElementById('submit');\r\n                    button.disabled = true;\r\n                    \r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n        \r\n    }}\r\n\r\n    render() {\r\n    const { in_out } = this.props.punch;\r\n    const curDate = this.getDate();\r\n    return(\r\n        <div>\r\n            <QrReader\r\n                className = 'center'\r\n                delay={200}\r\n                onError={this.handleError}\r\n                onScan={this.handleScan}\r\n                style={{ width: '500px' }}\r\n            />\r\n            <div className='fw6 lh-copy f3' >\r\n                <label className=\"db\">{`Place: ${this.state.location}`}</label>\r\n                <label className=\"db\">{`User: ${this.props.user.name}`} </label>\r\n                <label className=\"db\">{`Date: ${curDate}`}</label>\r\n                <label className=\"db\">{`In/Out: ${in_out}`}</label>\r\n            </div>\r\n            <div className=\"lh-copy w-20 center\">\r\n                <Submitbtn \r\n                    id=\"submit\" \r\n                    value=\"Punch\"\r\n                    onClick={this.onRouteChange}\r\n                />\r\n            </div>\r\n        </div>    \r\n    )\r\n    }\r\n}\r\n\r\nexport default PunchForm;"]},"metadata":{},"sourceType":"module"}