{"ast":null,"code":"import { saveAs } from 'file-saver';\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n\n  for (var i = 0; i !== s.length; ++i) {\n    view[i] = s.charCodeAt(i) & 0xFF;\n  }\n\n  return buf;\n}\n\nexport default (function (data, username) {\n  import('xlsx').then(function (XLSX) {\n    var wb = XLSX.utils.book_new();\n    wb.Props = {\n      Title: 'Test',\n      Subject: 'Test File',\n      Author: \"Nick\",\n      CreatedDate: new Date(2019, 4, 19)\n    };\n    wb = XLSX.utils.table_to_book(data, {\n      sheet: \"Sheet Js\"\n    });\n    var wbout = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'binary'\n    });\n    saveAs(new Blob([s2ab(wbout)], {\n      type: 'application/octet-stream'\n    }), \"\".concat(username, \" punches.xlsx\"));\n  });\n});","map":{"version":3,"sources":["C:\\Users\\Nicholas Krsikapa\\Desktop\\mikan_app\\frontend\\src\\components\\History\\Excelexport.js"],"names":["saveAs","s2ab","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","data","username","then","XLSX","wb","utils","book_new","Props","Title","Subject","Author","CreatedDate","Date","table_to_book","sheet","wbout","write","bookType","type","Blob"],"mappings":"AAAA,SAASA,MAAT,QAAuB,YAAvB;;AAEA,SAASC,IAAT,CAAcC,CAAd,EAAiB;AACb,MAAMC,GAAG,GAAG,IAAIC,WAAJ,CAAgBF,CAAC,CAACG,MAAlB,CAAZ;AAEA,MAAMC,IAAI,GAAG,IAAIC,UAAJ,CAAeJ,GAAf,CAAb;;AAEA,OAAK,IAAIK,CAAC,GAAC,CAAX,EAAcA,CAAC,KAAKN,CAAC,CAACG,MAAtB,EAA8B,EAAEG,CAAhC;AACIF,IAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUN,CAAC,CAACO,UAAF,CAAaD,CAAb,IAAkB,IAA5B;AADJ;;AAGA,SAAOL,GAAP;AACH;;AAID,gBAAgB,UAACO,IAAD,EAAOC,QAAP,EAAoB;AAChC,SAAO,MAAP,EAAeC,IAAf,CAAoB,UAAAC,IAAI,EAAI;AACxB,QAAIC,EAAE,GAAGD,IAAI,CAACE,KAAL,CAAWC,QAAX,EAAT;AACAF,IAAAA,EAAE,CAACG,KAAH,GAAW;AACTC,MAAAA,KAAK,EAAE,MADE;AAETC,MAAAA,OAAO,EAAE,WAFA;AAGTC,MAAAA,MAAM,EAAE,MAHC;AAITC,MAAAA,WAAW,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,EAAhB;AAJJ,KAAX;AAMAR,IAAAA,EAAE,GAAGD,IAAI,CAACE,KAAL,CAAWQ,aAAX,CAAyBb,IAAzB,EAA+B;AAACc,MAAAA,KAAK,EAAE;AAAR,KAA/B,CAAL;AAIA,QAAIC,KAAK,GAAGZ,IAAI,CAACa,KAAL,CAAWZ,EAAX,EAAe;AAACa,MAAAA,QAAQ,EAAC,MAAV;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAAf,CAAZ;AAEA5B,IAAAA,MAAM,CAAC,IAAI6B,IAAJ,CAAS,CAAC5B,IAAI,CAACwB,KAAD,CAAL,CAAT,EAAuB;AAACG,MAAAA,IAAI,EAAE;AAAP,KAAvB,CAAD,YAAgEjB,QAAhE,mBAAN;AACH,GAfD;AAgBH,CAjBD","sourcesContent":["import { saveAs } from 'file-saver'\r\n\r\nfunction s2ab(s) {\r\n    const buf = new ArrayBuffer(s.length)\r\n\r\n    const view = new Uint8Array(buf)\r\n\r\n    for (let i=0; i !== s.length; ++i)\r\n        view[i] = s.charCodeAt(i) & 0xFF\r\n\r\n    return buf\r\n}\r\n\r\n\r\n\r\nexport default  (data, username) => {\r\n    import('xlsx').then(XLSX => {\r\n        let wb = XLSX.utils.book_new(); \r\n        wb.Props = {\r\n          Title: 'Test',\r\n          Subject: 'Test File',\r\n          Author: \"Nick\",\r\n          CreatedDate: new Date(2019,4,19)\r\n        };\r\n        wb = XLSX.utils.table_to_book(data, {sheet: \"Sheet Js\"});\r\n        \r\n      \r\n      \r\n        let wbout = XLSX.write(wb, {bookType:'xlsx', type: 'binary'});\r\n      \r\n        saveAs(new Blob([s2ab(wbout)],{type: 'application/octet-stream'}), `${username} punches.xlsx`)\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}