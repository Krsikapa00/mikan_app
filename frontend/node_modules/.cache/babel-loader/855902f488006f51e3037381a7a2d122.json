{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\src\\\\components\\\\Register\\\\Register.js\";\nimport React from 'react';\nimport Submitbtn from '../Submitbtn';\nimport Inputbar from '../EditUsers/Inputbar';\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.onNameChange = function (event) {\n      _this.setState({\n        registerName: event.target.value\n      });\n    };\n\n    _this.onPasswordChange = function (event) {\n      _this.setState({\n        registerPassword: event.target.value\n      });\n    };\n\n    _this.onAdminChange = function (event) {\n      var box = document.getElementById('checkbox');\n\n      if (box.checked) {\n        _this.setState({\n          registerAdmin: true\n        });\n      } else {\n        _this.setState({\n          registerAdmin: false\n        });\n      }\n    };\n\n    _this.onRegister = function () {\n      fetch('http://localhost:3000/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: _this.state.registerName,\n          password: _this.state.registerPassword,\n          admin: _this.state.registerAdmin\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (user) {\n        console.log(user);\n\n        if (user.id) {\n          _this.props.onRouteChange('home');\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      registerName: '',\n      registerPassword: '',\n      registerAdmin: false\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.user.admin === true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"main\", {\n          className: \"pa4 black-80\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"measure center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"sign_up\",\n          className: \"ba b--transparent ph0 mh0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"f4 fw6 ph0 mh0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Register\"), React.createElement(Inputbar, {\n          label: \"Name\",\n          type: \"text\",\n          id: \"Name\",\n          placeholder: \"New users name\",\n          onChange: this.onNameChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(Inputbar, {\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"New users password\",\n          onChange: this.onPasswordChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"pa0 ma0 lh-copy f6 pointer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: \"checkbox\",\n          type: \"checkbox\",\n          onClick: function onClick() {\n            return _this2.onAdminChange(_this2);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), \" Admin User?\")), React.createElement(Submitbtn, {\n          value: \"Register User\",\n          onClick: this.onRegister,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"You do not have access to this part of the site\"));\n      }\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nexport default Register;","map":{"version":3,"sources":["C:\\Users\\Nicholas Krsikapa\\Desktop\\mikan_app\\src\\components\\Register\\Register.js"],"names":["React","Submitbtn","Inputbar","Register","props","onNameChange","event","setState","registerName","target","value","onPasswordChange","registerPassword","onAdminChange","box","document","getElementById","checked","registerAdmin","onRegister","fetch","method","headers","body","JSON","stringify","name","state","password","admin","then","response","json","user","console","log","id","onRouteChange","catch","err","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Submitbtn from '../Submitbtn';\r\nimport Inputbar from '../EditUsers/Inputbar';\r\n\r\n\r\nclass Register extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            registerName: '',\r\n            registerPassword: '',\r\n            registerAdmin: false,\r\n\r\n        }\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({registerName: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({registerPassword: event.target.value})\r\n    }\r\n\r\n    onAdminChange = (event) => {\r\n        const box = document.getElementById('checkbox');\r\n        \r\n        if (box.checked){\r\n            this.setState({registerAdmin: true })\r\n        } else {\r\n            this.setState({registerAdmin: false })\r\n        }\r\n    }\r\n\r\n    onRegister = () => { \r\n        fetch('http://localhost:3000/register', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                name : this.state.registerName,\r\n                password : this.state.registerPassword,\r\n                admin: this.state.registerAdmin\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            console.log(user);\r\n            if (user.id) {\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n        \r\n    }\r\n    \r\n    render(){\r\n    if (this.props.user.admin === true) {\r\n    return (\r\n        <div>\r\n            <main className=\"pa4 black-80\">\r\n                <form className=\"measure center\">\r\n                    <div id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <label className=\"f4 fw6 ph0 mh0\">Register</label>\r\n                        <Inputbar label='Name' type=\"text\" id=\"Name\" placeholder= \"New users name\" onChange={this.onNameChange} />\r\n                        <Inputbar label='Password' type=\"password\" id=\"password\" placeholder= \"New users password\" onChange={this.onPasswordChange} />\r\n                        \r\n                        <label className=\"pa0 ma0 lh-copy f6 pointer\"><input id='checkbox' type=\"checkbox\" onClick={() => this.onAdminChange(this)}/> Admin User?</label>\r\n                    </div>\r\n                    <Submitbtn value=\"Register User\" onClick={this.onRegister} />\r\n                   \r\n                </form>\r\n            </main>     \r\n        </div>\r\n    )\r\n    } else {\r\n        return(\r\n            <div>\r\n                <p>You do not have access to this part of the site</p>\r\n            </div>\r\n        )\r\n    }\r\n    }\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}