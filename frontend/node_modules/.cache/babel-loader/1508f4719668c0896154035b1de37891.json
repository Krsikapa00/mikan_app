{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nicholas Krsikapa\\\\Desktop\\\\mikan_app\\\\src\\\\components\\\\Menu\\\\Adminlastpunch.js\";\nimport React from 'react';\nimport Singlepunch from '../Singlepunch';\n\nvar Adminlastpunch = function Adminlastpunch(_ref) {\n  var adminlist = _ref.adminlist;\n\n  function getAdminLastPunch(_x) {\n    return _getAdminLastPunch.apply(this, arguments);\n  }\n\n  function _getAdminLastPunch() {\n    _getAdminLastPunch = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(userarr) {\n      var promises, results;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              promises = userarr.map(\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee(data) {\n                  var response;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return fetch(\"http://localhost:3000/latestpunch\", {\n                            method: 'POST',\n                            headers: {\n                              'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                              id: data.id\n                            })\n                          }).then(function (resp) {\n                            return resp.json();\n                          }).catch(function (err) {\n                            return console.log(err);\n                          });\n\n                        case 2:\n                          response = _context.sent;\n\n                          if (!response.id) {\n                            _context.next = 7;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", {\n                            id: response.id,\n                            name: data.name,\n                            date: response.date,\n                            location: response.location,\n                            time: response.time,\n                            inout: response.inout\n                          });\n\n                        case 7:\n                          return _context.abrupt(\"return\", 'Did not work');\n\n                        case 8:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n              _context2.next = 3;\n              return Promise.all(promises);\n\n            case 3:\n              results = _context2.sent;\n              console.log(results);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _getAdminLastPunch.apply(this, arguments);\n  }\n\n  if (adminlist[0]) {\n    getAdminLastPunch(adminlist);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, adminlist.map(function (data, i) {\n      return React.createElement(\"article\", {\n        className: \"mw5 center bg-lavender br3 pa3 pa4-ns mv3 ba b--black-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"f4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"\".concat(data.name)), React.createElement(\"hr\", {\n        className: \"mw3 bb bw1 b--black-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"db\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Last Punch\"));\n    }));\n  }\n};\n\nexport default Adminlastpunch;","map":{"version":3,"sources":["C:\\Users\\Nicholas Krsikapa\\Desktop\\mikan_app\\src\\components\\Menu\\Adminlastpunch.js"],"names":["React","Singlepunch","Adminlastpunch","adminlist","getAdminLastPunch","userarr","promises","map","data","fetch","method","headers","body","JSON","stringify","id","then","resp","json","catch","err","console","log","response","name","date","location","time","inout","Promise","all","results","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAiB;AAAA,MAAfC,SAAe,QAAfA,SAAe;;AAAA,WAErBC,iBAFqB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6BAEpC,kBAAkCC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEUC,cAAAA,QAFV,GAEqBD,OAAO,CAACE,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAY,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACFC,KAAK,sCAAsC;AAC9DC,4BAAAA,MAAM,EAAE,MADsD;AAE9DC,4BAAAA,OAAO,EAAE;AAAC,8CAAgB;AAAjB,6BAFqD;AAG9DC,4BAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,8BAAAA,EAAE,EAAEP,IAAI,CAACO;AADQ,6BAAf;AAHwD,2BAAtC,CAAL,CAMpBC,IANoB,CAMf,UAAAC,IAAI;AAAA,mCAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,2BANW,EAOtBC,KAPsB,CAOhB,UAAAC,GAAG;AAAA,mCAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,2BAPa,CADE;;AAAA;AACnBG,0BAAAA,QADmB;;AAAA,+BAWrBA,QAAQ,CAACR,EAXY;AAAA;AAAA;AAAA;;AAAA,2DAYlB;AACHA,4BAAAA,EAAE,EAAEQ,QAAQ,CAACR,EADV;AAEHS,4BAAAA,IAAI,EAAEhB,IAAI,CAACgB,IAFR;AAGHC,4BAAAA,IAAI,EAAEF,QAAQ,CAACE,IAHZ;AAIHC,4BAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAJhB;AAKHC,4BAAAA,IAAI,EAAEJ,QAAQ,CAACI,IALZ;AAMHC,4BAAAA,KAAK,EAAEL,QAAQ,CAACK;AANb,2BAZkB;;AAAA;AAAA,2DAqBb,cArBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAZ;;AAAA;AAAA;AAAA;AAAA,kBAFrB;AAAA;AAAA,qBA2B0BC,OAAO,CAACC,GAAR,CAAYxB,QAAZ,CA3B1B;;AAAA;AA2BUyB,cAAAA,OA3BV;AA4BIV,cAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ;;AA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFoC;AAAA;AAAA;;AAiCpC,MAAI5B,SAAS,CAAC,CAAD,CAAb,EAAiB;AACbC,IAAAA,iBAAiB,CAACD,SAAD,CAAjB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,SAAS,CAACI,GAAV,CAAc,UAASC,IAAT,EAAcwB,CAAd,EAAiB;AAC5B,aACI;AAAS,QAAA,SAAS,EAAC,0DAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAuBxB,IAAI,CAACgB,IAA5B,EADJ,EAEI;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKQ;AAAO,QAAA,SAAS,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALR,CADJ;AAUH,KAXA,CADL,CADJ;AAgBH;AAGJ,CAvDD;;AAyDA,eAAetB,cAAf","sourcesContent":["import React from 'react';\r\nimport Singlepunch from '../Singlepunch';\r\n\r\nconst Adminlastpunch = ({adminlist}) => {\r\n\r\n    async function getAdminLastPunch (userarr) {\r\n        \r\n        const promises = userarr.map(async data => {\r\n            const response = await fetch(`http://localhost:3000/latestpunch`, {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    id: data.id,\r\n                })\r\n            }).then(resp => resp.json())\r\n            .catch(err => console.log(err))\r\n\r\n\r\n            if (response.id){\r\n            return {\r\n                id: response.id,\r\n                name: data.name,\r\n                date: response.date,\r\n                location: response.location,\r\n                time: response.time,\r\n                inout: response.inout\r\n            }\r\n            } else {\r\n                return ('Did not work')\r\n            }\r\n        }) \r\n        \r\n        const results = await Promise.all(promises);\r\n        console.log(results)\r\n    }\r\n\r\n    if (adminlist[0]){\r\n        getAdminLastPunch(adminlist);\r\n\r\n        return (\r\n            <div>\r\n                {adminlist.map(function(data,i) {\r\n                    return(\r\n                        <article className=\"mw5 center bg-lavender br3 pa3 pa4-ns mv3 ba b--black-10\">\r\n                            <div className=\"tc\">\r\n                                <h1 className=\"f4\">{`${data.name}`}</h1>\r\n                                <hr className=\"mw3 bb bw1 b--black-10\" />\r\n                            </div>\r\n                                <label className=\"db\">{`Last Punch`}</label>\r\n                                {/* <Singlepunch punch={data} /> */}\r\n                        </article> \r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Adminlastpunch;"]},"metadata":{},"sourceType":"module"}